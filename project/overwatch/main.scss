$url: "https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images";

body{
	height: 100vh;
	/*
	body의 영역을 화면에 보이는 높이만큼 지정해줌
	어차피 가로는 전체(auto 기본 값)를 쓰므로 height만 지정해줌. */
	background-image: url("#{$url}/bg.jpg");
	background-size: cover;
	background-repeat: no-repeat;
	background-attachment: fixed;
}

.container {
	padding: 50px 0;
	.heroes {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		max-width: 700px;
		/*
		이 요소가 커질 수 있는 최대 width 700px + 요소가 줄어들어도 내부 요소가 안짤림
		width로만 지정해주면 요소가 줄어들면 내부 요소가 잘림
		 */
		margin: 0 auto;
		/*
		block요소의 width 값이 있을 때, margin : auto사용 시 좌우 가운데 정렬 된다.
		상, 하는 가운데 정렬은 안되고, 좌우는 가운데 정렬된다.
		*/
		padding: 40px, 20px;
		.hero {
			width: 80px;
			height: 80px;
			margin: 4px;
			border: 3px solid #fff;
			border-radius: 10px;
			box-sizing: border-box;
			background-color: #555;
			transform: skewX(-14deg);
			transition:
				transform .3s,
				background-color .6s;
			overflow: hidden;
			&:hover {
				background-color: #ff9c00;
				transform: skewX(-14deg) scale(1.3);
				z-index: 1;
			}
			.image {
				width: 140%;
				/*
				image 너비가 부모요소의 140% = 80px * 140만큼의 너비 크기를 가짐
				image가 140px의 너비 공간에 표시되는 거지 image의 너비가 무조건 출력된다는건 아님
				*/
				height: 100%;
				background-position: center;
				background-size: 90px;
				background-repeat: no-repeat;
				transform: skewX(14deg) translateX(-16px);
				/*
				부모의 영향으로 image도 -14deg기울어서 표시되니까 원상복구해줌
				 */
			}
			//.hero
			@for $i from 1 through 32{
				&:nth-child(#{$i}) .image{
					background-image: url("#{$url}/hero#{$i}.png");
				}
			}
		}
	}
	.logo{
		max-width: 300px;
		margin:0 auto;
		padding: 20px;
		img{
			width: 100%;
		}
	}
}
